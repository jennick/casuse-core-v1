# DEV compose – Traefik lokaal via http://localhost:${PUBLIC_HTTP_PORT:-10400}
# Extern netwerk (bestaand): casuse-core-v1_core_net

networks:
  core_net:
    external: true
    name: casuse-core-v1_core_net

services:

  core-traefik:
    image: traefik:v2.11
    container_name: core-traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # dev entrypoint (HTTP)
      - --entrypoints.web.address=:80
      # logging
      - --log.level=INFO
      # dashboard uit in dev
      - --api.dashboard=false
    ports:
      - "${PUBLIC_HTTP_PORT:-10400}:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [core_net]

  core-backend:
    build:
      context: ./core-backend
    image: casuse/core-backend:dashboard-mvp
    restart: unless-stopped
    environment:
      API_PREFIX: /core
      ENVIRONMENT: dev
      # Dev: sta Traefik-origin toe
      CORS_ALLOW_ORIGINS: "http://localhost:${PUBLIC_HTTP_PORT:-10400}"
    expose:
      - "9000"   # alleen intern; Traefik routeert
    labels:
      - traefik.enable=true
      # /core → backend (hoge prioriteit t.o.v. frontend catch-all)
      - traefik.http.routers.core-backend.rule=PathPrefix(`/core`)
      - traefik.http.routers.core-backend.entrypoints=web
      - traefik.http.routers.core-backend.priority=100
      - traefik.http.services.core-backend.loadbalancer.server.port=9000
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9000/healthz"]
      interval: 20s
      timeout: 5s
      retries: 6
      start_period: 15s
    depends_on:
      - core-traefik
    networks: [core_net]
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }

  core-frontend:
    build:
      context: ./core-frontend
    image: casuse/core-frontend:dashboard-mvp
    restart: unless-stopped
    expose:
      - "8200"   # alleen intern; Traefik routeert
    labels:
      - traefik.enable=true
      # root → frontend (catch-all met lage prioriteit)
      - traefik.http.routers.core-frontend.rule=PathPrefix(`/`)
      - traefik.http.routers.core-frontend.entrypoints=web
      - traefik.http.routers.core-frontend.priority=1
      - traefik.http.services.core-frontend.loadbalancer.server.port=8200
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8200/"]
      interval: 20s
      timeout: 5s
      retries: 6
      start_period: 20s
    depends_on:
      - core-traefik
    networks: [core_net]
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }
