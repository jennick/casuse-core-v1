name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ feat/agent-setup ]

jobs:
  test:
    name: CI / test (pull_request)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install backend runtime deps
        run: python -m pip install --upgrade pip && python -m pip install -r core-backend/requirements.txt

      - name: Install backend dev deps
        run: python -m pip install -r core-backend/requirements-dev.txt

      - name: Run backend tests
        run: python -m pytest -q core-backend/tests

  build_and_scan:
    name: CI / build_and_scan (pull_request)
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}/core-backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build backend image (core-backend context)
        uses: docker/build-push-action@v6
        with:
          context: ./core-backend
          file: ./core-backend/Dockerfile
          push: false
          load: true
          tags: ${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number || github.run_number }}

      - name: Generate SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number || github.run_number }}
          artifact-name: core-backend-sbom.spdx.json

      - name: Trivy scan (HIGH/CRITICAL -> fail)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number || github.run_number }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          vuln-type: 'os,library'
          severity: 'HIGH,CRITICAL'

      - name: Upload Trivy results to code scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      # ---------- Frontend build ----------
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: core-frontend/package-lock.json

      - name: Frontend install (lock-aware)
        working-directory: core-frontend
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Frontend build
        working-directory: core-frontend
        run: npm run build

  # (optioneel) rooktest compose, houdt config valide
  compose_config:
    name: CI / compose config
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker compose config (CI file)
        run: docker compose -f docker-compose.ci.yml config
