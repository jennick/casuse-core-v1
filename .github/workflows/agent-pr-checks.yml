name: Agent â€¢ PR Checks

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'agent/**'
      - 'core-backend/**'
      - 'modules/**'
      - '.ruff.toml'
      - 'mypy.ini'
      - 'docker-compose*.yml'

jobs:
  pr-checks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install agent deps
        run: |
          python -m pip install --upgrade pip
          if [ -f agent/requirements.txt ]; then python -m pip install -r agent/requirements.txt; fi
          python -m pip install ruff mypy bandit

      - name: Lint / Type / Security (advisory)
        id: audit
        continue-on-error: true
        run: |
          python - << 'PY'
          import json, subprocess, pathlib
          steps = {}

          def run(name, cmd):
              try:
                  rc = subprocess.call(cmd, shell=True)
              except Exception:
                  rc = 1
              steps[name] = {"rc": rc}
              return rc

          # ruff / mypy / bandit tegen backend + modules
          targets = ["core-backend/app", "modules"]
          run("ruff",   "ruff check .")
          run("mypy",   "mypy " + " ".join(targets))
          run("bandit", "bandit -q -r " + " ".join(targets))

          # compose config check: faalt niet; alleen signaal
          run("compose_config", "docker compose -f docker-compose.ci.yml config > /dev/null")

          print(json.dumps({"ok": all(v['rc']==0 for v in steps.values()),
                            "steps": steps,
                            "targets": targets}, indent=2))
          PY

      - name: Mark advisory result
        if: always()
        run: echo "Advisory checks completed (see logs)."
