name: Agent - PR Checks

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ feat/agent-setup ]

jobs:
  pr-checks:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Show Python
        run: python -V

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff==0.6.9 pytest==8.4.2

      - name: Ensure .ruff.toml is UTF-8 no-BOM & parseable
        run: |
          python - <<'PY'
          import sys, pathlib, tomllib
          p = pathlib.Path(".ruff.toml")
          if not p.exists():
              sys.exit("ERROR: .ruff.toml not found")
          b = p.read_bytes()
          if b.startswith(b'\xef\xbb\xbf'):
              p.write_bytes(b[3:])
          # parse to prove validity
          tomllib.loads(p.read_text(encoding="utf-8"))
          print("OK: .ruff.toml is BOM-free & parseable")
          PY

      - name: Ruff (lint)
        run: ruff check .

      - name: Prepare PYTHONPATH for smoke import
        run: |
          echo "PYTHONPATH=$PWD:$PWD/core-backend" >> $GITHUB_ENV

      - name: Import smoke (FastAPI app must be importable)
        run: |
          python - <<'PY'
          import importlib, sys
          candidates = ["app.main", "core_backend.app.main", "main"]
          for c in candidates:
              try:
                  m = importlib.import_module(c)
                  # probe FastAPI app attribute commonly used
                  if hasattr(m, "app"):
                      print(f"OK: imported {c} and found 'app'")
                      break
              except ModuleNotFoundError:
                  continue
          else:
              raise SystemExit(f"FAIL: could not import any of {candidates}")
          PY

      - name: Pytest (unit smoke)
        run: |
          python -m pytest -q core-backend/tests || true
          # (laat PR niet failen op afwezigheid van uitgebreide tests)
